#!/bin/bash

##########################################
BASE="/etc/paludis"
MYCONFIG="${BASE}"/myconfig

SETS=()
for s in cui gui test host.`hostname`; do
    [[ -f ${MYCONFIG}/${s} ]] && SETS+=( ${s} )
done
##########################################

INVOKED_NAME=$(basename ${0%.bash})

# default options
read -r -d '' DEFAULT_OPTIONS <<EOF
*/*			-* pam
*/*			alsa
*/*			ipv6
*/*			threads openmp
*/*			zsh-completion

*/*::x11		X
*/*::gnome		gtk3

*/*			build_options:		symbols=strip -recommended_tests
*/*			linguas:		zh_CN
*/*			amd64_cpu_features:	sse2 ssse3
*/*			video_drivers:		intel -gallium-intel

*/*::subi		build_options:      	work=preserve
*/*::subi-hack		build_options:      	work=preserve
EOF

show_sets() {
    cd ${MYCONFIG}
    for f in ${SETS[@]}; do
	awk '{sub("#.*",""); if(NF>0) print}' ${f} | \
	    awk '!/^[ \t]/ {sub("~","",$1); print "* " $1}'
    done
}

show_options() {
    echo "${DEFAULT_OPTIONS}"

    cd ${MYCONFIG}
    for f in ${SETS[@]}; do
	awk '{sub("#.*",""); if(NF>0) print}' ${f} | \
           awk '{gsub("(&.*|~|^[[:blank:]]+)",""); if ( NF > 1 ) print}'
    done
}

show_suggestions() {
#    echo '*/* -*/*'
    
    cd ${MYCONFIG}
    for f in ${SETS[@]}; do
	awk '{gsub("(~|#.*)",""); if(NF>0) print}' ${f} | \
           awk '/&/ {sub("^\t*",""); sub("\t.*&","\t"); print}'
    done
}

if [[ -d ${MYCONFIG} ]]; then
    case "${INVOKED_NAME}" in
	all )
            show_sets
	    ;;
	options )
            show_options
	    ;;
	suggestions )
	    show_suggestions
	    ;;
	* )
            echo everything else
	    ;;
    esac
else
    echo "# My config dir does not exist."
fi

