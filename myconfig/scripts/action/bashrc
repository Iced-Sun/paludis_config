show_bashrc_line() {
    ## malformed bashrc line
    if [[ $1 != *: ]]; then
			echo "A bash variable is supposed to have a ending colon"
			echo "    $line"
			return
    fi

    ## extract the flag name
    name=${1%:}
    shift

    ### TODO check ill-formed flags

    ## apply the flag contents
    if [[ $name == "ALTERNATIVE" ]]; then
			## alternative
			[[ `eclectic $1 show` == $2 ]] && echo '# will not update alternative' || eclectic $1 script --sh $2
    elif [[ $1 != "^"* && $1 != "$"* ]]; then
			## a plain assignment
			[[ $1 == '"'* ]] && echo "$name=$@" || echo "$name=\"$@\""
    else
			## flags add/remove
			while [[ $# -gt 0 ]]; do
				if [[ $1 == "^"* ]]; then
					echo "$name+=\" ${1#^}\""
				elif [[ $1 == "$"* ]]; then
					echo "$name=\"\${$name/${1#$}/}\""
				else
					echo "A modifying action requires all flags are add/remove"
					echo "    $1"
				fi
				shift
			done
    fi
    echo
}

## avoid surprises in `set -- $line` due to globbing
set -f

## dispatch to bashrc on env generation
if [[ $1 == 'gen-env' ]]; then
	for set in ${WEAK_SETS[@]} ${GENERAL_SETS[@]} ${MACHINE_SETS[@]}; do
		cat ${SETS_DIR}/$set | sed -r -e 's/#.*//' | grep '*/*' | grep -E 'CHOST|TARGETS' | while read line; do
			## for convenient access
			set -- $line
			[[ $1 == '@*/*' || $1 == '*/*' ]] && shift && show_bashrc_line "$@" | sed -e 's/-\*//' | sed -e 's/TARGETS="/TARGETS+=" /'
		done
	done
else
	## read configuration and extract those for bashrc
	for set in ${WEAK_SETS[@]} ${ACTIVE_SETS[@]}; do
		cat ${SETS_DIR}/$set | sed -r -n 's|^[[:blank:]]*@(.*/.*)|\1| p' | while read line; do
			## for convenient access
			set -- $line

			## extra information if not called by paludis
			[[ x$PALUDIS_CLIENT == "x" ]] && echo && echo "### bashrc configuration for set --$set--" && echo $1:

			## print if not called by paludis or matches global spec or current spec
			## TODO: support SLOT/PV/REPOSITORY -- more spec handling
			[[ x$PALUDIS_CLIENT == "x" || $1 == '*/*' || $1 == ${CATEGORY}/${PN} ]] && shift && show_bashrc_line "$@"

			#cat ${SETS_DIR}/$set | sed -r -n "s|^[[:blank:]]*@${CATEGORY}/${PN}[[:blank:]]*|| p" | while read line; do
		done
	done

	## generate CFLAGS/LDFLAGS for different targets
	for TARGET in ${TARGETS[@]}; do
		[[ $TARGET == '-*' ]] && continue
		_TARGET=${TARGET//-/_}
		echo ${_TARGET}_CFLAGS=\${MY__${_TARGET}_CFLAGS:-\$CFLAGS}
		echo ${_TARGET}_CFLAGS="\"\${${_TARGET}_CFLAGS} \$([[ x\${MY__USE_DISTCC} = xno ]] && echo \"\${MY__CFLAGS_MARCH}\" || echo \"\$(${TARGET}-gcc \${MY__CFLAGS_MARCH} -E -v - </dev/null 2>&1 | sed -n -e 's/^.*- -/-/p')\")\""
		echo ${_TARGET}_CXXFLAGS=\${${_TARGET}_CFLAGS}
		echo ${_TARGET}_LDFLAGS=\${MY__${_TARGET}_LDFLAGS:-\$LDFLAGS}
	done
fi

## restore
set +f
