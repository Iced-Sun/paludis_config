#!/bin/bash

## FIXME move the hard-coded config outwards

### TODO: if cave can add an option --binary-path like --chroot-path, we can add set/repo bindist-laptop-x61
### TODO: or better, if there is an option --destination (so we can use 'cave resolve package --destination bindist-laptop-x61/installed-laptop-x61')
###
### TODO: support cross-installed repositories

#### Helper functions ####

## detect install destination, includes the ROOT of the chroot, and
## the LOCATION of the repository
# take the destination or target repository as the parameter; else a
# guess will be made from ${CAVE_RESOLVE_CMDLINE_make}
detect_destination() {
  local REPO

  ## if a parameter is provided, the function is called by
  ## installed*.bash
  REPO=$1

  ## no parameter means the function is called by other *.bash
  if [[ x$1 == "x" ]]; then
		## in case of
		if [[ x${CAVE_RESOLVE_CMDLINE_make} == "xc" ]]; then
			pushd ${PALUDIS_CONFIG_DIR}/repositories >/dev/null
			for repo in installed-chroot-*.bash; do
				REPO=${repo%.bash}

				# if chroot-path is provided, it dominates
				## TODO this is broken now, since 'self-invoking' is very confusing
				return 1
				#local REPO_ROOT=`./$repo self-invoking | sed -n -e 's/^root = // p'`
				if [[ $CAVE_RESOLVE_CMDLINE_chroot_path == $REPO_ROOT ]]; then
					break
				fi
			done
			popd >/dev/null
		else
			REPO=installed
		fi
  fi

  LOCATION=/var/db/paludis/repositories/$REPO
  WORLD=${LOCATION}/world
  if [[ $REPO != "installed" ]]; then
		NAME=${REPO#installed-chroot-}
		ROOT=/srv/linux/machine_components/systems/${NAME}
  fi
}

####### Action handlers #######
## general configs
## packages related configs
